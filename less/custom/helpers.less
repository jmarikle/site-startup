/* helpers */

  //////////////////////////////////////////
 //     Spacers for graphics in copy     //
//////////////////////////////////////////

@factor: 2px;

.spacerX (@index) when (@index > 0) {
 	(~".spacer@{index}") { .spacer(@index); }
	.spacerX(@index - 1);
}
.spacerX (@index) when (@index = 0) {
	(~".spacer@{index}") { .spacer(@index); }
}
.spacer (@size) {
	height: @baseLineHeight;
	float: left;
	clear: left;
	padding-left: @size*@factor;
}
.spacerX (70);

  //////////////////////////////////////
 //     Half width column layout     //
//////////////////////////////////////

#grid {

  .core (@gridColumnWidth, @gridGutterWidth) {

    .spanXandHalfGutter (@index) when (@index > 0) {
      (~".span@{index}andHalfGutter") { .spanAndHalfGutter(@index); }
      .spanXandHalfGutter(@index - 1);
    }
    .spanXandHalfGutter (0) {}
    
    .spanAndHalfGutter (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 0.5));
    }

    .spanXbackHalfGutter (@index) when (@index > 0) {
      (~".span@{index}backHalfGutter") { .spanBackHalfGutter(@index); }
      .spanXbackHalfGutter(@index - 1);
    }
    .spanXbackHalfGutter (0) {}
    
    .spanBackHalfGutter (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1)) + @gridGutterWidth / 2;
      margin-left: @gridGutterWidth / 2;
    }

    .spanXbackHalfFull (@index) when (@index > 0) {
      (~".span@{index}backHalfFull") { .spanBackHalfFull(@index); }
      .spanXbackHalfFull(@index - 1);
    }
    .spanXbackHalfFull (0) {}
    
    .spanBackHalfFull (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1)) + @gridGutterWidth;
      margin-left: 0px !important;
    }

    .spanXforwardHalfGutter (@index) when (@index > 0) {
      (~".span@{index}forwardHalfGutter") { .spanforwardHalfGutter(@index); }
      .spanXforwardHalfGutter(@index - 1);
    }
    .spanXforwardHalfGutter (0) {}
    
    .spanforwardHalfGutter (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1)) - @gridGutterWidth / 2;
      margin-left: @gridGutterWidth + @gridGutterWidth / 2;
    }
 
    // generate spanXhalf
    .spanXandHalfGutter (@gridColumns);
    .spanXbackHalfGutter (@gridColumns);
    .spanXbackHalfFull (@gridColumns);
    .spanXforwardHalfGutter (@gridColumns);

  }

}

  //////////////////////////////////////////
 //      Adjust for centered columns     //
//////////////////////////////////////////

.container-offset() {
	width:
		(@gridColumnWidth * @gridColumns) +
		(@gridGutterWidth * @gridColumns);

	& > .row {
		margin-left: 0;

		& > [class*="span"]:first-child {
			margin-left: @gridGutterWidth / 2;
		}
	}
}

  //////////////////////////////////////////
 //       Alpha Backgrounds for IE       //
//////////////////////////////////////////

.alphaBackground(@color: #555, @alpha: 1){
	@argb: ~`'#' + (parseInt("@{alpha}" * 100, 16) - 1).toString(16) + "@{color}".substr(1)`;
	background-color: transparent;
	background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	zoom: 1;
	background-color: transparent\9;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=@argb, endColorstr=@argb);
}


.alphaBackgroundGradient(@startColor: #555, @startAlpha: 1, @endColor: #333, @endAlpha: 1) {
	@color1: hsla(hue(@startColor), saturation(@startColor), lightness(@startColor), @startAlpha);
	@color2: hsla(hue(@endColor), saturation(@endColor), lightness(@endColor), @endAlpha);
	@argb1: ~`'#' + (parseInt("@{startAlpha}" * 100, 16) - 1).toString(16) + "@{startColor}".substr(1)`;
	@argb2: ~`'#' + (parseInt("@{endAlpha}" * 100, 16) - 1).toString(16) + "@{endColor}".substr(1)`;

	//background-color: mix(@color1, @color2, 60%);
	background-image: -moz-linear-gradient(top, @color1, @color2); // FF 3.6+
	background-image: -ms-linear-gradient(top, @color1, @color2); // IE10
	background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@color1), to(@color2)); // Safari 4+, Chrome 2+
	background-image: -webkit-linear-gradient(top, @color1, @color2); // Safari 5.1+, Chrome 10+
	background-image: -o-linear-gradient(top, @color1, @color2); // Opera 11.10
	background-image: linear-gradient(top, @color1, @color2); // The standard
	background-repeat: repeat-x;
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=@argb1, endColorstr=@argb2);
}